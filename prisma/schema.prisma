generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(uuid())
  email       String    @unique
  name        String?
  password    String
  avatarUrl   String?   @map("avatar_url")
  plan        PlanType  @default(FREE)
  planExpires DateTime? @map("plan_expires")
  projects    Project[]
  payments    Payment[]
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  @@map("users")
}

enum PlanType {
  FREE
  PRO
  ENTERPRISE
}

model Payment {
  id          String     @id @default(uuid())
  amount      Float
  user        User       @relation(fields: [userId], references: [id])
  userId      String     @map("user_id")
  status      String     @default("pending")
  gatewayId   String?    @map("gateway_id")
  plan        PlanType
  duration    Int?       @default(1)
  createdAt   DateTime   @default(now()) @map("created_at")
  @@map("payments")
}

model Project {
  id          String   @id @default(uuid())
  owner       String
  name        String
  description String
  userId      String   @map("user_id")
  user        User     @relation(fields: [userId], references: [id])
  polls       Poll[]
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@unique([userId, name])
  @@map("projects")
}

model Poll {
  id          String   @id @default(uuid())
  question    String
  options     Option[]
  projectId   String   @map("project_id")
  project     Project  @relation(fields: [projectId], references: [id])
  duration    Int      @default(24)
  maxVotes    Int?     @map("max_votes")
  respondents Int      @default(0)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  @@map("polls")
}

model Option {
  id        String   @id @default(uuid())
  text      String
  votes     Int      @default(0)
  pollId    String   @map("poll_id")
  poll      Poll     @relation(fields: [pollId], references: [id])
  createdAt DateTime @default(now()) @map("created_at")

  @@unique([pollId, text])
  @@map("options")
}
